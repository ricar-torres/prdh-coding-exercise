# top-most EditorConfig file
root = true

# Unix-style newlines with a newline ending every file
[*]
end_of_line = lf
insert_final_newline = true

# Matches multiple files with brace characters
[*.{cs}]
indent_style = tab
indent_size = 2
charset = utf-8
trim_trailing_whitespace = true

# .NET coding convention settings for EditorConfig
[*.cs]

# avoid usings directives inside namespaces
csharp_using_directive_placement = outside_namespace:suggestion

# organize usings alphabetically
dotnet_sort_system_directives_first = true

# suggestion to use var keyword when the type is apparent
csharp_style_var_when_type_is_apparent = true:suggestion

# suggestion to use var keyword elsewhere
csharp_style_var_elsewhere = true:suggestion

# suggestion to use language keywords instead of BCL types
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion

# suggestion to use the colon in the middle of the line for inheritance/implements
csharp_new_line_before_open_brace = types:when_multiline

# suggest to use expressions bodies for methods when possible
csharp_style_expression_bodied_methods = when_on_single_line:suggestion

# suggest to use expressions bodies for constructors when possible
csharp_style_expression_bodied_constructors = when_on_single_line:suggestion

# suggest to use expressions bodies for operators when possible
csharp_style_expression_bodied_operators = when_on_single_line:suggestion

# suggest to use expressions bodies for properties when possible
csharp_style_expression_bodied_properties = when_on_single_line:suggestion

# suggest to use expressions bodies for indexers when possible
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion

# suggest to use expressions bodies for accessors when possible
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion

# suggest to use pattern matching when possible
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion

# suggest to use pattern matching over as with null check
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# suggest to use condition ?: when possible
csharp_style_conditional_delegate_call = true:suggestion

# only use var when it's obvious what the variable type is
csharp_style_var_for_built_in_types = false:suggestion

# never use this
dotnet_style_qualification_for_event = false:suggestion

# never use this
dotnet_style_qualification_for_field = false:suggestion

# never use this
dotnet_style_qualification_for_method = false:suggestion

# never use this
dotnet_style_qualification_for_property = false:suggestion

# use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_references = true:suggestion

# prefer to generate C#6 and C#7 features
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_expression_bodied_backing_field = true:suggestion
csharp_style_coalesce_expression = true:suggestion
csharp_style_coalesce_empty_string = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
